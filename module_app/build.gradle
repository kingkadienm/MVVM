if (!isModule.toBoolean()) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}
apply from: rootProject.file("base.build.gradle")

android {

    signingConfigs {
        release {
            storeFile file(StoreFile)
            storePassword StorePassword
            keyAlias KeyAlias
            keyPassword KeyPassword
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    defaultConfig {
        if (!isModule.toBoolean()) {
            applicationId rootProject.ext.applicationId
        }
        multiDexEnabled true

        ndk {
//            abiFilters "armeabi", "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
            abiFilters 'armeabi-v7a', 'arm64-v8a'
        }

        manifestPlaceholders = [
                PACKAGE_NAME           : applicationId == null ? "" : applicationId,
        ]
        signingConfig signingConfigs.release
    }

    if (!isModule.toBoolean()) {
        //打包改名
        android.applicationVariants.all { variant ->
            def appName = rootProject.name
            def buildType = variant.buildType.name
            def outputTime = new Date().format("yyyy_MMdd_HHmm", TimeZone.getTimeZone("GMT+08:00"))
            def versionName = variant.versionName
            def versionCode = variant.versionCode
            variant.outputs.each { output ->
                if ("release" == buildType) {
                    if (output.outputFileName.endsWith('.apk')) {
                        output.outputFileName = "${appName}_${versionCode}_V${versionName}_${outputTime}.apk"
                    }
                } else {
                    if (output.outputFileName.endsWith('.apk')) {
                        output.outputFileName = "${appName}_${versionCode}_V${versionName}_debug.apk"
                    }
                }
            }
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }
}

dependencies {

    implementation project(":lib_base_module")
    if (!isModule.toBoolean()) {
        implementation project(':module_main')
        implementation project(':module_home')
        implementation project(':module_me')
        implementation project(':module_ai')
        implementation project(':module_login')
    }
}
